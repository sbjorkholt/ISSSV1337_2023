---
title: "Displaying descriptive statistics"
author: "Solveig Bj√∏rkholt"
---

```{r, echo = FALSE, message = FALSE, warning = FALSE, error = FALSE}
library(tidyverse)
library(janitor)
library(kableExtra)
library(knitr)

costofliving <- readRDS("../datafolder/costofliving2.rds")
```

Sometimes, we might want to display several statistical measures at the same time. We can display the mean and the standard deviation together using `summarise`.

```{r}
costofliving %>%
  summarise(cofi_mean = mean(cofi, na.rm = TRUE),
            cofi_sd = sd(cofi, na.rm = TRUE))
```

And we can combine several `tidyverse` functions such as `filter`, `select`, `group_by`, `summarise` and `rename` to get a table showing some central tendencies and variation on variables and units that are important for our analysis.

```{r}

cofi_table <- costofliving %>%
  filter(country %in% c("United Kingdom", "Germany", "China", "United States")) %>% # Picking out these countries
  select(country, cofi) %>% # Fetching only the variables select and cofi
  group_by(country) %>% # Finding the next summary statistics per country
  summarise(cofi_mean = mean(cofi, na.rm = TRUE), # Finding the mean of cost of living (per country)
            cofi_sd = sd(cofi, na.rm = TRUE)) %>% # Finding the standard deviation of cost of living (per country)
  rename("Country" = country, # Renaming the variables into something more human readable
         "Average cost of living" = cofi_mean,
         "Spread around cost of living" = cofi_sd)

cofi_table
```

If we would like to include this table in a `pdf` or `html` report, we can use the `knitr` package and the `kableExtra` package to wrap the table into a neat table-structure. The base functions in these packages is `kable` to make a pdf- or html-table, and `kable_styling` to make it a bit more beautiful. Here, I add the argument `latex_options = "HOLD_position"` because it stops the table from jumping around in the final pdf file.

```{r}

library(knitr)
library(kableExtra)

cofi_table %>%
  kable() %>% # Make html or pdf table
  kable_styling(latex_options = "HOLD_position") # Make sure that the table stays in place

```

There are many ways to style your table so that it becomes the way you want it to, for example as shown in the code below. If you want to learn more, have a look at [this page](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html). Here, I also round the variable to two decimals before I make a beautiful table out of them, using `mutate` and `round`.

```{r}
cofi_table %>%
  mutate(`Average cost of living` = round(`Average cost of living`, 2), # Rounding the variable into two decimals
         `Spread around cost of living` = round(`Spread around cost of living`, 2)) %>%
  kable() %>%
  kable_classic(full_width = FALSE, # Make the table fill the page with theme "classic"
                html_font = "Cambria", # Give a certain font to the page
                font_size = 12, # Set font size to 12
                latex_options = "HOLD_position") %>% # Keep the table in this spot when making the pdf file
  row_spec(0, color = "blue") %>% # Make the text in the top row blue
  column_spec(1, bold = TRUE, # Set the first column to bold
              border_right = TRUE) # Add a vertical line at the first column

```
